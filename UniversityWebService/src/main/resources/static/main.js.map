{"version":3,"sources":["./src/app/components/finance-info/finance-info.component.ts","./src/app/components/finance-info/finance-info.component.html","./src/app/components/exam-part-table/exam-part-table.component.html","./src/app/components/exam-part-table/exam-part-table.component.ts","./src/app/services/course-service.service.ts","./src/app/user-info/user-info.component.ts","./src/app/user-info/user-info.component.html","./src/app/document-table/document-table.component.html","./src/app/document-table/document-table.component.ts","./src/app/finance-table/finance-table.component.html","./src/app/finance-table/finance-table.component.ts","./src/app/professor-info/professor-info.component.html","./src/app/professor-info/professor-info.component.ts","./src/app/services/enrollment-service.service.ts","./src/app/components/admin-professor/admin-professor/admin-professor.component.ts","./src/app/components/admin-professor/admin-professor/admin-professor.component.html","./src/app/services/student-service.service.ts","./src/app/components/admin-courses/admin-courses.component.html","./src/app/components/admin-courses/admin-courses.component.ts","./src/app/login-form/login-form.component.ts","./src/app/login-form/login-form.component.html","./src/app/list-group/list-group.component.html","./src/app/list-group/list-group.component.ts","./src/environments/environment.ts","./src/app/services/jwt-utils.service.ts","./src/app/components/professor-courses/professor-courses.component.ts","./src/app/components/professor-courses/professor-courses.component.html","./src/app/components/admin-student-detail/admin-student-detail.component.ts","./src/app/components/admin-student-detail/admin-student-detail.component.html","./src/app/student-info/student-info.component.ts","./src/app/student-info/student-info.component.html","./src/app/professor-exams/professor-exams.component.html","./src/app/professor-exams/professor-exams.component.ts","./src/app/exam/exam.component.html","./src/app/exam/exam.component.ts","./src/app/components/admin-courses-details/admin-courses-details.component.html","./src/app/components/admin-courses-details/admin-courses-details.component.ts","./src/app/professor-navbar/professor-navbar.component.ts","./src/app/professor-navbar/professor-navbar.component.html","./src/app/admin-profile/admin-profile.component.html","./src/app/admin-profile/admin-profile.component.ts","./src/app/services/exam-part.service.ts","./src/app/components/exam-part-row/exam-part-row.component.html","./src/app/components/exam-part-row/exam-part-row.component.ts","./src/app/models/Professor.ts","./src/app/components/professor-student-table/professor-student-table.component.ts","./src/app/components/professor-student-table/professor-student-table.component.html","./src/app/student-table/student-table.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/admin-students/admin-students.component.ts","./src/app/admin-students/admin-students.component.html","./src/app/components/exams/exams.component.html","./src/app/components/exams/exams.component.ts","./src/app/components/finance-history/finance-history.component.html","./src/app/components/finance-history/finance-history.component.ts","./src/app/services/event-service.service.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/services/authentication-service.service.ts","./src/app/components/finance/finance.component.ts","./src/app/components/finance/finance.component.html","./src/app/app.module.ts","./src/app/register-form/register-form.component.ts","./src/app/register-form/register-form.component.html","./src/app/grade-student-table/grade-student-table.component.ts","./src/app/grade-student-table/grade-student-table.component.html","./src/app/components/document-table-row/document-table-row.component.ts","./src/app/components/document-table-row/document-table-row.component.html","./src/app/course-table/course-table.component.html","./src/app/course-table/course-table.component.ts","./src/app/professor-profile/professor-profile.component.ts","./src/app/professor-profile/professor-profile.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/exam-table/exam-table.component.html","./src/app/exam-table/exam-table.component.ts","./src/app/services/admin-students.service.ts","./src/app/models/Enrollment.ts","./src/app/models/Student.ts","./src/app/services/document-service.service.ts","./src/app/components/exam-row/exam-row.component.ts","./src/app/components/exam-row/exam-row.component.html","./src/app/app-routing/app-routing.module.ts","./src/app/models/User.ts","./src/app/services/admin-professors.service.ts","./src/app/services/finance.service.ts","./src/app/services/professor-service.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/services/admin-courses-service.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-finance-info',\r\n  templateUrl: './finance-info.component.html',\r\n  styleUrls: ['./finance-info.component.css']\r\n})\r\nexport class FinanceInfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>finance-info works!</p>\r\n","<div class=\"bg-light p-4 rounded\">\r\n    <h2>Exam parts</h2>\r\n    <table class=\"table table-sm\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Points</th>\r\n          <th scope=\"col\">Required points</th>\r\n          <th scope=\"col\">Status\r\n            <div class=\"form-check form-check-inline\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" id=\"statusSortCheckbox\" (click)=\"onCheckClick()\">\r\n            </div>\r\n          </th>\r\n          <th scope=\"col\">Options</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr app-exam-part-row [examPart]=\"examPart\" [index]=\"i\" *ngFor=\"let examPart of examParts; let i = index\"></tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport ExamPart from 'src/app/models/ExamPart';\r\n\r\n@Component({\r\n  selector: 'app-exam-part-table',\r\n  templateUrl: './exam-part-table.component.html',\r\n  styleUrls: ['./exam-part-table.component.css']\r\n})\r\nexport class ExamPartTableComponent implements OnInit {\r\n\r\n  @Input() examParts: ExamPart[];\r\n  statusSortChecked: boolean;\r\n\r\n  constructor() { }\r\n\r\n  onCheckClick(){\r\n    var sortCheckbox = <HTMLInputElement>document.getElementById(\"statusSortCheckbox\");\r\n    if(sortCheckbox.checked == true){\r\n      this.examParts.sort(function(a: ExamPart, b: ExamPart){\r\n        var typeA = a.examPartStatus.name;\r\n        var typeB = b.examPartStatus.name;\r\n        if (typeA < typeB) {\r\n          return -1;\r\n        }\r\n        if (typeA > typeB) {\r\n          return 1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }else{\r\n      this.examParts.sort(function(a: ExamPart, b: ExamPart){\r\n        var typeA = a.examPartStatus.name;\r\n        var typeB = b.examPartStatus.name;\r\n        if (typeB < typeA) {\r\n          return -1;\r\n        }\r\n        if (typeB > typeA) {\r\n          return 1;\r\n        }\r\n\r\n        return 0;\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CourseInstance } from '../models/CourseInstanse';\r\nimport { CourseSpecification } from '../models/CourseSpecification';\r\nimport { Student } from '../models/Student';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CourseServiceService {\r\n\r\n  private readonly path = \"http://localhost:8080/teachers/courses\"\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  getAllTeacherCourses(): Observable<CourseSpecification[]>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n  \r\n    return this.http.get<CourseSpecification[]>(this.path, {headers: headers});\r\n  }\r\n  getAllTeacherStudents(id : number): Observable<Student[]>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<Student[]>(\"http://localhost:8080/teachers/courses/\"+ id +\"/students\", {headers: headers});\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-info',\r\n  templateUrl: './user-info.component.html',\r\n  styleUrls: ['./user-info.component.css']\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>user-info works!</p>\r\n","<div class=\"bg-light p-4 rounded\">\r\n  <h2>Documents</h2>\r\n  <table class=\"table\">\r\n    <thead class=\"bg-primary rounded\">\r\n      <tr>\r\n        <th scope=\"col\" class=\"text-light\">#</th>\r\n        <th scope=\"col\" class=\"text-light\">Title</th>\r\n        <th scope=\"col\" class=\"text-light\">Options</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr app-document-table-row [document]=\"document\" [index]=\"i\" *ngFor=\"let document of documents; let i = index\">\r\n        \r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12\">\r\n      <p *ngIf=\"documents.length == 0\" class=\"text-center h3 bold\">No documents to display</p>\r\n      <hr class=\"divider\">\r\n    </div>\r\n  </div>\r\n    \r\n  <div class=\"row\">\r\n    <div class=\"col-lg-8\">\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" class=\"custom-file-input\" id=\"chooseFileInput\">\r\n        <label class=\"custom-file-label\" for=\"customFile\">Choose file</label>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-lg-4\">\r\n      <button type=\"button\" (click)=\"onUpload()\" class=\"btn btn-primary\">Upload file</button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport Document  from \"../models/Document\";\r\nimport FileResponse from '../models/FileResponse';\r\nimport { DocumentServiceService } from '../services/document-service.service';\r\n\r\n@Component({\r\n  selector: 'app-document-table',\r\n  templateUrl: './document-table.component.html',\r\n  styleUrls: ['./document-table.component.css']\r\n})\r\nexport class DocumentTableComponent implements OnInit {\r\n  documents:Document[] = [];\r\n\r\n  constructor(private documentService: DocumentServiceService) { }\r\n\r\n  onUpload(): void {\r\n    this.documentService.uploadDocument().subscribe( (document) => { \r\n      this.documents.push(document);\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.documentService.getLoggedInUserDocuments().subscribe( (documents) => (this.documents = documents))\r\n  }\r\n\r\n}\r\n","<div class=\"w-25 m-auto\">\r\n    <h2>Transactions</h2>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Type</th>\r\n          <th scope=\"col\">Amount</th>\r\n          <th scope=\"col\">Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let transaction of transactions; let i = index\">\r\n          <th scope=\"row\">{{ i + 1 }}</th>\r\n          <td>{{ transaction.type }}</td>\r\n          <td>{{ transaction.amount}}</td>\r\n          <td>{{ transaction.date }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport Transaction from \"../models/Transaction\";\r\nimport { FinanceService } from '../services/finance.service';\r\n\r\n@Component({\r\n  selector: 'app-finance-table',\r\n  templateUrl: './finance-table.component.html',\r\n  styleUrls: ['./finance-table.component.css']\r\n})\r\nexport class FinanceTableComponent implements OnInit {\r\n  transactions:Transaction[];\r\n\r\n  constructor(private financeService: FinanceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.financeService.getAll().subscribe( (transactions) => (this.transactions = transactions))\r\n  }\r\n\r\n}\r\n","<div div class=\"bg-light p-4 rounded\">\r\n    <h2>Profile</h2>\r\n    <table class=\"table\">\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            First Name:\r\n          </td>\r\n          <td>\r\n                <span *ngIf=\"professor != undefined\">{{professor.firstName}}</span>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                Last name:\r\n            </td>\r\n            <td>\r\n              <span *ngIf=\"professor != undefined\">{{professor.lastName}}</span>\r\n            </td>\r\n          </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport {Professor} from '../models/Professor';\r\nimport { ProfessorServiceService } from '../services/professor-service.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-info',\r\n  templateUrl: './professor-info.component.html',\r\n  styleUrls: ['./professor-info.component.css']\r\n})\r\nexport class ProfessorInfoComponent implements OnInit {\r\n\r\n  professor : Professor;\r\n  constructor(private professorService : ProfessorServiceService ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.professorService.getloggedTeacher().subscribe((professor)=>(this.professor=professor));\r\n\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport Enrollment from '../models/Enrollment';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnrollmentServiceService {\r\n\r\n  private readonly path = \"http://localhost:8080/enrollments\";\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  getLoggedInStudentEnrollments(): Observable<Enrollment[]>{\r\n    console.log(\"sent\");\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n\r\n    return this.http.get<Enrollment[]>(this.path + \"/me\", {headers: headers});\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Professor } from 'src/app/models/Professor';\r\nimport { AdminProfessorsService } from 'src/app/services/admin-professors.service';\r\nimport { Location } from '@angular/common';\r\nimport { User } from 'src/app/models/User';\r\n\r\n@Component({\r\n  selector: 'app-admin-professor',\r\n  templateUrl: './admin-professor.component.html',\r\n  styleUrls: ['./admin-professor.component.css']\r\n})\r\nexport class AdminProfessorComponent implements OnInit {\r\n\r\n  professors: Professor[];\r\n\r\n  constructor(private adminProfessorsService: AdminProfessorsService,private route: Router,private location: Location) { }\r\n\r\n  title = \"Professors\"\r\n  public profesor:Professor=new Professor();\r\n  public selectedProfesor:Professor=new Professor();\r\n  ngOnInit(): void {\r\n    this.adminProfessorsService.getAll().subscribe((professors) => (this.professors = professors));\r\n    \r\n\r\n  }\r\n \r\n  addTeacher(){\r\n    console.log(this.profesor);\r\n    this.adminProfessorsService.addTeacher(this.profesor).subscribe((result) => {\r\n      if(result){\r\n        this.profesor=new Professor();\r\n        this.route.routeReuseStrategy.shouldReuseRoute = () => false;\r\n        this.route.onSameUrlNavigation = 'reload';\r\n        this.route.navigate(['/adminProfessors']);\r\n      }\r\n    });\r\n  }\r\n  editTeacher(){\r\n    console.log(this.selectedProfesor);\r\n    this.adminProfessorsService.editTeacher(this.selectedProfesor).subscribe((result) => {\r\n      if(result){\r\n        this.selectedProfesor=new Professor();\r\n        this.route.routeReuseStrategy.shouldReuseRoute = () => false;\r\n        this.route.onSameUrlNavigation = 'reload';\r\n        this.route.navigate(['/adminProfessors']);\r\n\r\n\r\n      }\r\n    });\r\n  }\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n  public showAddTeacher(): void {\r\n    let x = document.getElementById(\"addTeacher\");\r\n    if (x.style.display === \"none\") {\r\n      x.style.display = \"block\";\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  }\r\n  public showEditTeacher(profesor:Professor): void {\r\n    this.selectedProfesor=JSON.parse(JSON.stringify(profesor));;\r\n    this.selectedProfesor.user.password=\"\";\r\n    let x = document.getElementById(\"editTeacher\");\r\n    if (x.style.display === \"none\") {\r\n      x.style.display = \"block\";\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  }\r\n  removeTeacher(profesor:Professor){\r\n    console.log(profesor);\r\n    this.adminProfessorsService.deleteTeacher(profesor).subscribe((result) => {\r\n      this.route.routeReuseStrategy.shouldReuseRoute = () => false;\r\n      this.route.onSameUrlNavigation = 'reload';\r\n      this.route.navigate(['/adminProfessors']);\r\n    \r\n    } ,(error)=>{\r\n    console.log(error);\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div style=\"margin-bottom: 1.5rem;\">\r\n  <h3 style=\"margin-top: 80px;\">{{ title }}</h3>\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">FirstName</th>\r\n        <th scope=\"col\">LastName</th>\r\n        <th scope=\"col\">Options</th>\r\n        <th scope=\"col\">Options</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor = \"let professor of professors; let i = index\">\r\n        <th scope=\"row\">{{ i + 1 }}</th>\r\n        <td>{{ professor.firstName }}</td>\r\n        <td>{{ professor.lastName }}</td>\r\n        <td>\r\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeTeacher(professor)\">Delete</button>\r\n        </td>\r\n        <td>\r\n          <button type=\"button\" class=\"btn btn-info\" (click)=\"showEditTeacher(professor)\">Edit</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <button type=\"button\" class=\"btn btn-success\" style=\"float: right;\" (click)=\"showAddTeacher()\">Add professor</button>\r\n</div>\r\n\r\n<div id=\"addTeacher\" style=\"display: none;\">\r\n  <h2>Add new Teacher</h2>\r\n  <form  (ngSubmit)=\"addTeacher()\">\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputFirstName\" class=\"col-sm-2 col-form-label\">FirstName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input [(ngModel)]=\"profesor.firstName\" type=\"text\" id=\"inputFirstName\" class=\"form-control\" placeholder=\"Enter the First Name\" name=\"firstName\" >\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputlastName\" class=\"col-sm-2 col-form-label\">lastName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input [(ngModel)]=\"profesor.lastName\" type=\"text\" id=\"inputLastName\" class=\"form-control\" placeholder=\"Enter the Last Name\" name=\"lastName\" >\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputUserName\" class=\"col-sm-2 col-form-label\">UserName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input  [(ngModel)]=\"profesor.user.userName\" type=\"email\" class=\"form-control\" id=\"inputUserName\" placeholder=\"Enter the username \" name=\"username\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Password</label>\r\n      <div class=\"col-sm-10\">\r\n        <input  [(ngModel)]=\"profesor.user.password\" type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Enter the password\" name=\"password\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <button type=\"button\" class=\"btn btn-primary\" style=\"float: right;\">Cancel</button>\r\n    </div>\r\n    <div class=\"col-11\">\r\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"float: right;\" >Confirm</button>\r\n    </div>\r\n    \r\n  </form>\r\n</div>\r\n\r\n<div id=\"editTeacher\" style=\"display: none;\">\r\n  <h2>Edit Teacher</h2>\r\n  <form  (ngSubmit)=\"editTeacher()\">\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputFirstName\" class=\"col-sm-2 col-form-label\">FirstName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input [(ngModel)]=\"selectedProfesor.firstName\" type=\"text\" id=\"inputFirstNameEdit\" class=\"form-control\" placeholder=\"Enter the First Name\" name=\"firstName\" >\r\n      </div>\r\n    \r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputlastName\" class=\"col-sm-2 col-form-label\">lastName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input [(ngModel)]=\"selectedProfesor.lastName\" type=\"text\" id=\"inputLastNameEdit\" class=\"form-control\" placeholder=\"Enter the Last Name\" name=\"lastName\" >\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <button type=\"button\" class=\"btn btn-primary\" style=\"float: right;\">Cancel</button>\r\n    </div>\r\n    <div class=\"col-11\">\r\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"float: right;\" >Confirm</button>\r\n    </div>\r\n    \r\n  </form>\r\n</div>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Student } from '../models/Student';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentServiceService {\r\n\r\n  private readonly path = 'http://localhost:8080/students';\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  getLoggedInStudent(): Observable<Student>{\r\n    return this.http.get<Student>(this.path);\r\n  }\r\n\r\n  getMe(): Observable<Student>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n\r\n    return this.http.get<Student>(this.path + \"/me\", {headers: headers});\r\n  }\r\n\r\n}\r\n","<div>\n    <h3 style=\"margin-top: 80px;\">{{ title }}</h3>\n    <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Name</th>\n            <th scope=\"col\">Options</th>\n            <th scope=\"col\">Options</th>\n            <th scope=\"col\">Options</th>\n          </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor = \"let course of courses; let i = index\">\n                <th scope=\"row\">{{ i + 1 }}</th>\n                <td>{{ course.title }}</td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-info\" (click)=\"gotoDetails(course.id)\">Details</button>\n                </td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-info\">Edit</button>\n                </td>\n                <td>\n                  <button type=\"button\" class=\"btn btn-danger\">Delete</button>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Course } from 'src/app/models/Course';\nimport { AdminCoursesServiceService } from 'src/app/services/admin-courses-service.service';\n\n@Component({\n  selector: 'app-admin-courses',\n  templateUrl: './admin-courses.component.html',\n  styleUrls: ['./admin-courses.component.css']\n})\nexport class AdminCoursesComponent implements OnInit {\n\n  courses: Course[];\n  title: String = \"Courses\";\n  \n  constructor(private adminCourseService: AdminCoursesServiceService, private route: Router) { }\n\n  ngOnInit(): void {\n    this.adminCourseService.getAll().subscribe((courses) => (this.courses = courses));\n  }\n\n  gotoDetails(id: number): void {\n    this.route.navigate(['/AdminCoursesDetails', id]);\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { AuthenticationServiceService } from '../services/authentication-service.service';\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Observable } from 'rxjs';\r\nimport { throwError } from 'rxjs';\r\nimport {Router} from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n\r\n  @Input() onLogin: () => void;\r\n\r\n  constructor(private authenticationService: AuthenticationServiceService,\r\n    private router: Router) { }\r\n\r\n  login(form: NgForm): void{\r\n    console.log(form.value);\r\n    var username: string = form.value.username;\r\n    var password: string = form.value.password;\r\n    \r\n    this.authenticationService.login(username, password).subscribe(\r\n      (loggedIn:boolean) => {\r\n        if(loggedIn){\r\n          this.router.navigate([\"\"]);\r\n        }\r\n      }\r\n    ,\r\n    (err:Error) => {\r\n      if(err.toString()==='Ilegal login'){\r\n        \r\n        console.log(err);\r\n      }\r\n      else{\r\n        console.log(err);\r\n        throwError(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","<form class=\"p-3 rounded\" style=\"background-color: white;\" #signupForm=\"ngForm\" (ngSubmit)=\"login(signupForm)\">\r\n  <h2 style=\"color: black;\">Login</h2>\r\n  <div class=\"mb-3\">\r\n    <label style=\"color: black;\" for=\"inputEmail1\" class=\"form-label\">Email address</label>\r\n    <input type=\"email\" class=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\" name=\"username\" ngModel>\r\n  </div>\r\n  <div class=\"mb-3\">\r\n    <label style=\"color: black;\" for=\"inputPassword1\" class=\"form-label\">Password</label>\r\n    <input type=\"password\" class=\"form-control\" id=\"inputPassword\" name=\"password\" ngModel>\r\n  </div>\r\n  <div class=\"mb-3 form-check\">\r\n    <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberCheck\">\r\n    <label class=\"form-check-label\" for=\"rememberCheck\">Remember me.</label>\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary btn-pill\" style=\"margin-right: 5px;\">Submit</button>\r\n  <button routerLink=\"/register\" type=\"button\" class=\"btn btn-secondary\">Don't have an account?</button>    \r\n</form>","<div class=\"w-25 m-auto\">\r\n    <h2>Student info</h2>\r\n    <ul class=\"list-group\" *ngFor=\"let document of documents\">\r\n        <li class=\"list-group-item\"> \r\n            {{document.title}} \r\n            <button class=\"p-0 btn btn-danger\" style=\"float: right; margin-left: 5px;\">Delete</button>\r\n            <button class=\"p-0 btn btn-success\" style=\"float: right;\">Download</button>\r\n        </li>\r\n    </ul>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Document from '../models/Document';\r\n\r\n@Component({\r\n  selector: 'app-list-group',\r\n  templateUrl: './list-group.component.html',\r\n  styleUrls: ['./list-group.component.css']\r\n})\r\nexport class ListGroupComponent implements OnInit {\r\n  documents:Document[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUtilsService {\n\n  constructor() { }\n\n  getRoles(token: string) {\n    let jwtData = token.split('.')[1];\n    let decodedJwtJsonData = window.atob(jwtData);\n    let decodedJwtData = JSON.parse(decodedJwtJsonData);\n\n    return [decodedJwtData.role];\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-professor-courses',\r\n  templateUrl: './professor-courses.component.html',\r\n  styleUrls: ['./professor-courses.component.css']\r\n})\r\nexport class ProfessorCoursesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-course-table></app-course-table>\r\n<app-professor-student-table></app-professor-student-table>\r\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { Student } from 'src/app/models/Student';\nimport { User } from 'src/app/models/User';\nimport { AdminStudentsService } from 'src/app/services/admin-students.service';\n\n@Component({\n  selector: 'app-admin-student-detail',\n  templateUrl: './admin-student-detail.component.html',\n  styleUrls: ['./admin-student-detail.component.css']\n})\nexport class AdminStudentDetailComponent implements OnInit {\n\n  student: Student = {\n    firstName: '',\n    lastName: '',\n    cardNumber: '',\n    balance: +'',\n    accountNumber: +'',\n    user: null\n  }\n  id: number;\n\n  constructor(private studentService: AdminStudentsService, private activatedRoute: ActivatedRoute, private route: Router, private location: Location) { }\n\n  ngOnInit(): void {\n      this.id=+this.activatedRoute.snapshot.params[\"id\"];\n        this.studentService.getStudent(this.id)\n      .subscribe(data => {\n        this.student = data});\n    }  \n      \n  goBack(): void {\n    this.location.back();\n  }\n\n  editStudent(): void {\n    this.studentService.updateStudent(this.student.id, this.student).subscribe(() => this.route.navigate([\"adminStudents\"]));\n  }\n  \n}\n","<div id=\"editStudent\">\n  <h3>Edit student</h3>\n  <form>\n    <div class=\"row mb-3\">\n      <label for=\"inputFirstName\" class=\"col-sm-2 col-form-label\">FirstName</label>\n      <div class=\"col-sm-10\">\n        <input type=\"text\" [(ngModel)]=\"student.firstName\" id=\"inputFirstName\" name=\"firstName\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"row mb-3\">\n      <label for=\"inputLastName3\" class=\"col-sm-2 col-form-label\">LastName</label>\n      <div class=\"col-sm-10\">\n        <input type=\"text\" [(ngModel)]=\"student.lastName\" name=\"lastname\" id=\"inputLastName3\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"row mb-3\">\n      <label for=\"inputCardNumber\" class=\"col-sm-2 col-form-label\">Card number</label>\n      <div class=\"col-sm-10\">\n        <input type=\"text\" [(ngModel)]=\"student.cardNumber\" name=\"cardnumber\" id=\"inputCardNumber\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"row mb-3\">\n      <label for=\"inputBalance\" class=\"col-sm-2 col-form-label\">Balance</label>\n      <div class=\"col-sm-10\">\n        <input type=\"text\" [(ngModel)]=\"student.balance\" name=\"balance\" id=\"inputBalance\" class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"row mb-3\">\n      <label for=\"inputCardNumber\" class=\"col-sm-2 col-form-label\">Account number</label>\n      <div class=\"col-sm-10\">\n        <input type=\"text\" [(ngModel)]=\"student.accountNumber\" name=\"accountnumber\" id=\"inputCardNumber\"\n          class=\"form-control\">\n      </div>\n    </div>\n    <div class=\"col-12\">\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"float: right;\" (click)=\"goBack()\">Cancel</button>\n    </div>\n    <div class=\"col-11\">\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"float: right;\" (click)=\"editStudent()\">Confirm</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Student } from \"../models/Student\";\r\nimport { User } from '../models/User';\r\nimport { StudentServiceService } from '../services/student-service.service';\r\n\r\n@Component({\r\n  selector: 'app-student-info',\r\n  templateUrl: './student-info.component.html',\r\n  styleUrls: ['./student-info.component.css']\r\n})\r\nexport class StudentInfoComponent implements OnInit {\r\n  student:Student = {\r\n    id: 0,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    cardNumber: \"\",\r\n    balance: 0,\r\n    accountNumber: 123123,\r\n    user: {\r\n      userName: \"\",\r\n      role: \"\",\r\n      password: \"\"\r\n    }\r\n  };\r\n  \r\n  constructor(private studentService: StudentServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.studentService.getMe().subscribe( (student) => (this.student = student));\r\n  }\r\n\r\n}\r\n","<div class=\"bg-light p-4 rounded\">\r\n  <h2>Student info</h2>\r\n  <table class=\"table\">\r\n    <tbody>\r\n      <tr>\r\n        <td>\r\n          First Name:\r\n        </td>\r\n        <td>\r\n              {{student.firstName}}\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n          <td>\r\n              Last name:\r\n          </td>\r\n          <td>\r\n              {{student.lastName}}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n              Card number:\r\n          </td>\r\n          <td>\r\n              {{student.cardNumber}}\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n              Balance:\r\n          </td>\r\n          <td>\r\n              {{student.balance}} RSD\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n              Account number:\r\n          </td>\r\n          <td>\r\n              {{student.accountNumber}}\r\n          </td>\r\n        </tr>\r\n    </tbody>\r\n  </table>\r\n</div>","<div>\r\n    <h3 style=\"margin-top: 80px;\">{{ title }}</h3>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Course</th>\r\n          <th scope=\"col\">Classroom</th>\r\n          <th scope=\"col\">Date</th>\r\n          <th scope=\"col\">Time</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor = \"let examPart of examParts; let i = index\">\r\n          <th scope=\"row\">{{ i + 1 }}</th>\r\n          <td>\r\n            {{ examPart.course }}\r\n          </td>\r\n          <td>{{ examPart.classroom }}</td>\r\n          <td>{{ examPart.date }}</td>\r\n          \r\n          <td>\r\n            {{ examPart.time }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    \r\n  </div>","import { identifierModuleUrl } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport ExamPart from '../models/ExamPart';\r\nimport ExamPartsAndCourses from '../models/ExamPartsAndCourses';\r\nimport {Professor} from '../models/Professor';\r\nimport { ProfessorServiceService } from '../services/professor-service.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-exams',\r\n  templateUrl: './professor-exams.component.html',\r\n  styleUrls: ['./professor-exams.component.css']\r\n})\r\nexport class ProfessorExamsComponent implements OnInit {\r\n  professor : Professor;\r\n  constructor(private professorService : ProfessorServiceService) { };\r\n  title = \"Exam Parts\";\r\n  examParts: ExamPartsAndCourses[];\r\n  \r\n  \r\n  ngOnInit(): void {\r\n\r\n    this.professorService.getloggedTeacher().subscribe((professor)=>{\r\n      this.professor=professor\r\n      this.professorService.getTeacherExamParts(this.professor)\r\n                           .subscribe((examParts)=>{this.examParts=examParts\r\n      this.examParts.forEach(examPart => { \r\n            examPart.date=examPart.examPartStartDate.split('T')[0];\r\n            examPart.time=examPart.examPartStartDate.split('T')[1].substring(0,8);\r\n      });\r\n      }\r\n      \r\n      );\r\n      \r\n    });\r\n    \r\n    \r\n  }\r\n\r\n}\r\n","<div class=\"w-50 m-auto\">\r\n  <h2>Register Exams</h2>\r\n  <p><input type=\"checkbox\">   January\r\n    <input type=\"checkbox\">   February\r\n  </p>\r\n  <table class=\"table\" >\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">No.</th>\r\n        <th scope=\"col\">Code</th>\r\n        <th scope=\"col\">Course</th>\r\n        <th scope=\"col\">Date</th>\r\n        <th scope=\"col\">Price</th>\r\n        <th scope=\"col\">Teacher</th>\r\n        <th scope=\"col\"></th>\r\n        <th scope=\"col\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let course of courses; let i = index\">\r\n        <th scope=\"row\">{{ i + 1 }}</th>\r\n        <td>{{ course.code }}</td>\r\n        <td>{{ course.title }}</td>\r\n        <td>04/04/2004</td>\r\n        <td>200</td>\r\n        <td>{{ course.teacher }}</td>\r\n        <td><button type=\"button\" class=\"btn btn-info\">Delete</button></td>\r\n        <td><button type=\"button\" class=\"btn btn-danger\">Edit</button></td>\r\n\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <button type=\"button\" class=\"btn btn-info\" >Add new register exam</button>\r\n<h2 >Registered Exams</h2>\r\n  <table class=\"table\" >\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">No.</th>\r\n        <th scope=\"col\">Code</th>\r\n        <th scope=\"col\">Course</th>\r\n        <th scope=\"col\">Date</th>\r\n        <th scope=\"col\">Price</th>\r\n        <th scope=\"col\">Teacher</th>\r\n        <th scope=\"col\">Time</th>\r\n        <th scope=\"col\">Classroom</th>\r\n        <th scope=\"col\"></th>\r\n        <th scope=\"col\"></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let course of courses; let i = index\">\r\n        <th scope=\"row\">{{ i + 1 }}</th>\r\n        <td>{{ course.code }}</td>\r\n        <td>{{ course.title }}</td>\r\n        <td>04/04/2004</td>\r\n        <td>200</td>\r\n        <td>{{ course.teacher }}</td>\r\n        <td>12:00</td>\r\n        <td>NTP202</td>\r\n        <td><button type=\"button\" class=\"btn btn-info\">Delete</button></td>\r\n        <td><button type=\"button\" class=\"btn btn-danger\">Edit</button></td>\r\n\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Exam} from \"../models/Exam\";\r\nimport {Course} from \"../models/Course\";\r\n@Component({\r\n  selector: 'app-exam',\r\n  templateUrl: './exam.component.html',\r\n  styleUrls: ['./exam.component.css']\r\n})\r\nexport class ExamComponent implements OnInit {\r\n  // exams:Exam[]=[\r\n  //   {id:1,name:'Web programiranje',dateOfregistration:'2020-02-s02', points: 100, grade:10},\r\n  //   {id:2,name: 'Baza podataka' ,dateOfregistration:'2020-04-02', points: 99, grade:10},\r\n  //   {id:3,name:'Internet mreze',dateOfregistration:'2020-06-02', points: 100, grade:10},\r\n  //   {id:4,name: 'Asembler',dateOfregistration:'2020-07-02', points: 100, grade:10}\r\n  // ];\r\n  // courses:Course[]=[\r\n  //   {id:'1',title:'Matematika 1',ECTS:8,code:'SIT02D',teacher:'Gabrijela Grujic'},\r\n  //   {id:'2',title:'Matematika 2',ECTS:8,code:'SIT08',teacher:'Mile Moler'}\r\n\r\n\r\n  // ];\r\n  exams:Exam[] = [];\r\n  courses:Course[] = [];\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\n    <h3 style=\"margin-top: 80px;\">{{ title }}</h3>\n    <table class=\"table\">\n        <thead>\n          <tr>\n            <th scope=\"col\">#</th>\n            <th scope=\"col\">Teacher</th>\n            <th scope=\"col\">Start date of teaching</th>\n            <th scope=\"col\">End date of teaching</th>\n          </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor = \"let professor of professors; let i = index;\">\n                <th scope=\"row\">{{ i + 1 }}</th>\n                <td>{{ professor.firstName }}</td>\n                <td *ngFor = \"let ci of courseInstances;\">\n                    {{ ci.startDate }}\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CourseInstance } from 'src/app/models/CourseInstanse';\nimport { Professor } from 'src/app/models/Professor';\nimport { AdminCoursesServiceService } from 'src/app/services/admin-courses-service.service';\n\n@Component({\n  selector: 'app-admin-courses-details',\n  templateUrl: './admin-courses-details.component.html',\n  styleUrls: ['./admin-courses-details.component.css']\n})\nexport class AdminCoursesDetailsComponent implements OnInit {\n\n  id: number;\n  professors: Professor[];\n  courseInstances: CourseInstance[];\n\n  // name(): any {\n  //   const uniqueDates = [...new Set(this.courseInstances.map(date => date.toString()))];\n  //   return uniqueDates;\n  //   console.log(uniqueDates); \n  // }\n  \n\n\n  title =\"Details for course\";\n\n  constructor(private adminCourseService: AdminCoursesServiceService, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.getCI();\n    console.log(this.courseInstances);\n  }\n\n  getCI() {\n    this.id=+this.activatedRoute.snapshot.params[\"id\"];\n    this.adminCourseService.getTeachersByCourse(this.id)\n    .subscribe(professors => {\n      this.professors = professors;\n      this.adminCourseService.getCourseInstancesByCourse(this.id)\n      .subscribe(courseInstances => \n      this.courseInstances = courseInstances);\n    });\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationServiceService } from '../services/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-navbar',\r\n  templateUrl: './professor-navbar.component.html',\r\n  styleUrls: ['./professor-navbar.component.css']\r\n})\r\nexport class ProfessorNavbarComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthenticationServiceService) { }\r\n\r\n  onLogOut(){\r\n    this.authService.logout(); \r\n    window.location.reload();\r\n  }\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header class=\"site-navbar py-4 js-sticky-header site-navbar-target\" role=\"banner\">\r\n<div class=\"d-flex align-items-center\">\r\n    <div class=\"site-logo mr-auto w-25\"><a routerLink=\"/\">UniService</a></div>\r\n    <div class=\"mx-auto text-center\">\r\n      <nav class=\"site-navigation position-relative text-right\" role=\"navigation\">\r\n        <ul class=\"site-menu main-menu js-clone-nav mx-auto d-none d-lg-block  m-0 p-0\">\r\n          <li><a routerLink=\"/professorProfile\" class=\"nav-link\"><strong>Profile</strong></a></li>\r\n          <li><a routerLink=\"/professorExams\" class=\"nav-link\"><strong>Exams</strong></a></li>\r\n          <li><a routerLink=\"/courseTable\" class=\"nav-link\"><strong>Courses</strong></a></li>\r\n          <li class=\"nav-item\"><a class=\"nav-link\" (click)=\"onLogOut()\" >Logout</a></li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n\r\n","<nav class=\"nav\">\n    <a class=\"nav-link Students\" routerLink = \"/adminStudents\" style=\"color: black;\">Students</a>\n    <a class=\"nav-link Professors\" routerLink = \"/adminProfessors\" style=\"color: black;\" href=\"#\">Professors</a>\n    <a class=\"nav-link Exams\" routerLink = \"/exam\" style=\"color: black;\" href=\"#\">Exams</a>\n    <a class=\"nav-link Courses\" routerLink = \"/AdminCourses\" style=\"color: black;\" href=\"#\">Courses</a>\n    <a *ngIf=\"loggedIn()\" class=\"nav-link Logout\" style=\"color: black;\" (click)=\"logout()\" href=\"#\">Logout</a>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationServiceService } from '../services/authentication-service.service';\n\n@Component({\n  selector: 'app-admin-profile',\n  templateUrl: './admin-profile.component.html',\n  styleUrls: ['./admin-profile.component.css']\n})\nexport class AdminProfileComponent implements OnInit {\n\n  constructor(private authService: AuthenticationServiceService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  loggedIn(): boolean{\n    return this.authService.isLoggedIn();\n  }\n\n  logout(): void{\n    this.authService.logout();\n    this.router.navigate(['login']);\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport ExamPart from '../models/ExamPart';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExamPartService {\r\n\r\n  private readonly path = \"http://localhost:8080/examParts\";\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  registerExamPart(id: number): Observable<ExamPart>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n  \r\n    return this.http.post<ExamPart>(this.path + \"/register/\" + id, {}, {headers: headers});\r\n  }\r\n\r\n  cancelExamPart(id: number): Observable<ExamPart>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n  \r\n    return this.http.post<ExamPart>(this.path + \"/cancel/\" + id, {}, {headers: headers});\r\n  }\r\n}\r\n","<th scope=\"row\">{{ index + 1 }}</th>\r\n<td>{{ examPart.examPartType.name}}</td>\r\n<td>{{ examPart.examPartPoints}}</td>\r\n<td>{{ examPart.requiredPoints}}</td>\r\n<td>{{ examPart.examPartStatus.name}}</td>\r\n<td>\r\n    <button *ngIf=\"examPart.examPartStatus.name != 'Registered'\" (click)=\"registerExam(examPart.id)\" class=\"btn btn-primary\">Register</button>\r\n    <button *ngIf=\"examPart.examPartStatus.name == 'Registered'\" (click)=\"cancelExam(examPart.id)\" class=\"btn btn-primary\">Cancel</button>\r\n</td>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport ExamPart from 'src/app/models/ExamPart';\r\nimport { ExamPartService } from 'src/app/services/exam-part.service';\r\n\r\n@Component({\r\n  selector: '[app-exam-part-row]',\r\n  templateUrl: './exam-part-row.component.html',\r\n  styleUrls: ['./exam-part-row.component.css']\r\n})\r\nexport class ExamPartRowComponent implements OnInit {\r\n\r\n  @Input() examPart: ExamPart;\r\n  @Input() index;\r\n\r\n  constructor(private examPartService: ExamPartService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registerExam(id: number): void {\r\n    this.examPartService.registerExamPart(id).subscribe(( examPart ) => {\r\n      this.examPart = examPart;\r\n    })\r\n  }\r\n\r\n  cancelExam(id: number): void {\r\n    this.examPartService.cancelExamPart(id).subscribe((examPart) => {\r\n      this.examPart = examPart;\r\n    })\r\n  }\r\n\r\n}\r\n","\r\nimport Teaching from \"./Teaching\";\r\nimport { User } from \"./User\";\r\n\r\nexport class Professor{\r\n    id:number;\r\n    firstName:string;\r\n    lastName:string;\r\n    teaching: Teaching[];\r\n    user: User;\r\n    constructor(){ \r\n        this.user=new User();\r\n        this.user.role= \"ROLE_TEACHER\";\r\n    } \r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-professor-student-table',\r\n  templateUrl: './professor-student-table.component.html',\r\n  styleUrls: ['./professor-student-table.component.css']\r\n})\r\nexport class ProfessorStudentTableComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>professor-student-table works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Student} from '../models/Student';\r\nimport {Exam} from '../models/Exam';\r\n@Component({\r\n  selector: 'app-student-table',\r\n  templateUrl: './student-table.component.html',\r\n  styleUrls: ['./student-table.component.css']\r\n})\r\nexport class StudentTableComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  exams:Exam[]=[];\r\n  students:Student[]=[\r\n    {\r\n      id: 1,\r\n      firstName: \"Aleksa\",\r\n      lastName: \"Petrovic\",\r\n      cardNumber: \"12313rfr35y24ygw3r5325\",\r\n      balance: 15000,\r\n      accountNumber: 423756547967,\r\n      user: {\r\n        userName: \"aleksa123\",\r\n        password:\"asdasd\",\r\n        role: \"ROLE_STUDENT\"\r\n      }\r\n    },\r\n    {\r\n      id: 1,\r\n      firstName: \"Milica\",\r\n      lastName: \"Pajic\",\r\n      cardNumber: \"345yuikj4567890g\",\r\n      balance: 15000,\r\n      accountNumber: 234567890,\r\n      user: {\r\n        userName: \"aleksa123\",\r\n        password:\"asdasd\",\r\n        role: \"ROLE_STUDENT\"\r\n      }\r\n    },\r\n\r\n\r\n   ]\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div *ngIf=\"currentUser != false; else elseBlock\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <app-navbar *ngIf=\"roles.includes('ROLE_STUDENT')\"></app-navbar>\r\n        <app-admin-profile  *ngIf=\"roles.includes('ROLE_ADMIN')\"></app-admin-profile>\r\n        <app-admin-profile  *ngIf=\"roles.includes('ROLE_PROFESSOR')\"></app-admin-profile>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <ng-template #elseBlock>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6 col-xl-6\">\r\n        <div>\r\n          <h2 class=\"bold text-white\">UniService</h2>\r\n          <br>\r\n          <p class=\"text-white\">“Education is the most powerful weapon which you can use to change the world” – Nelson Mandela</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-lg-6  col-xl-6\">\r\n        <div style=\"background-color: white\">\r\n          <app-login-form class=\"mt-auto\"></app-login-form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n</div>","import { Component } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'FrontendWebService';\r\n  roles: string[]= [];\r\n  currentUser: any;\r\n\r\n  constructor(private router: Router) { \r\n\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.roles = this.getCurrentUser().roles;\r\n    this.currentUser = this.getCurrentUser();\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Student } from '../models/Student';\nimport { User } from '../models/User';\nimport { AdminStudentsService } from '../services/admin-students.service';\n\n@Component({\n  selector: 'app-admin-students',\n  templateUrl: './admin-students.component.html',\n  styleUrls: ['./admin-students.component.css']\n})\nexport class AdminStudentsComponent implements OnInit {\n\n  students: Student[];\n\n  stud: Student;\n\n  private readonly ROLE_STUDENT = \"ROLE_STUDENT\";\n  \n  constructor(private adminStudentService: AdminStudentsService, private route: Router, private location: Location, private activateRoute: ActivatedRoute) { \n  }  \n\n  addStudent(form: NgForm): void {\n    this.stud = new Student ({\n      firstName: form.value.firstname,\n      lastName: form.value.lastname,\n      balance: +form.value.balance,\n      cardNumber: form.value.cardnumber,\n      accountNumber: +form.value.accountnumber,\n      user: new User({\n        userName: form.value.username,\n        password: form.value.password,\n        role: this.ROLE_STUDENT\n      }),\n    });\n    this.adminStudentService.saveStudent(this.stud).subscribe(() => this.route.navigate([\"adminStudents\"]));\n    console.log(form.value);\n  }\n\n  // editStud(id: number) {\n  //   this.adminStudentService.getStudent(this.activateRoute.params['id'])\n  //       .subscribe(res => \n  //         this.stu = res.body);\n  // }\n    \n  title = \"Studenti\"\n\n  ngOnInit(): void {\n    this.adminStudentService.getRefresNeeded().subscribe(() => this.getAllStudets());\n    this.getAllStudets();\n  }\n\n  private getAllStudets() {\n    this.adminStudentService.getAll().subscribe((students) => (this.students = students));\n  }\n\n  deleteStudent(studentId: number): void {\n    this.adminStudentService.deleteStudent(studentId).subscribe(() => this.getAllStudets());\n  }\n\n  gotoEdit(id: number): void {\n    this.route.navigate(['/adminEditStudents', id]);\n  }\n\n  public showAddStudent(): void {\n    let x = document.getElementById(\"addStudent\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n  }\n\n  public showEditStudent(): void {\n    let x = document.getElementById(\"editStudent\");\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","<div>\r\n  <h3 style=\"margin-top: 80px;\">{{ title }}</h3>\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">FirstName</th>\r\n        <th scope=\"col\">LastName</th>\r\n        <th scope=\"col\">Card number</th>\r\n        <th scope=\"col\">Options</th>\r\n        <th scope=\"col\">Options</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor = \"let student of students; let i = index\">\r\n        <th scope=\"row\">{{ i + 1 }}</th>\r\n        <td>{{ student.firstName }}</td>\r\n        <td>{{ student.lastName }}</td>\r\n        <td>{{ student.cardNumber }}</td>\r\n        <td>\r\n          <button type=\"button\" class=\"btn btn-danger\" (click)=\"deleteStudent(student.id)\">Delete</button>\r\n        </td>\r\n        <td>\r\n          <button type=\"button\" class=\"btn btn-info\" (click)=\"gotoEdit(student.id)\">Edit</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <button type=\"button\" class=\"btn btn-success\" style=\"float: right;\" (click)=\"showAddStudent()\">Add student</button>\r\n</div>\r\n<div id=\"addStudent\" style=\"display: none;\">\r\n  <h2>Add new student</h2>\r\n  <form #signupForm=\"ngForm\" (ngSubmit)=\"addStudent(signupForm)\">\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputFirstName\" class=\"col-sm-2 col-form-label\">FirstName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" id=\"inputFirstName\" class=\"form-control\" placeholder=\"Enter the FirstName\" name=\"firstname\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputLastName3\" class=\"col-sm-2 col-form-label\">LastName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" id=\"inputLastName3\" class=\"form-control\" placeholder=\"Enter the LastName\" name=\"lastname\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputBalance\" class=\"col-sm-2 col-form-label\">Balance</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" id=\"inputBalance\" class=\"form-control\" placeholder=\"Enter the Balance of Student\" name=\"balance\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputCardNumber\" class=\"col-sm-2 col-form-label\">Card number</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" id=\"inputCardNumber\" class=\"form-control\" placeholder=\"Enter the Card number of Student\" name=\"cardnumber\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputAccountNumber\" class=\"col-sm-2 col-form-label\">Account number</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" class=\"form-control\" id=\"inputAccountNumber\" placeholder=\"Enter the Account number of Student\" name=\"accountnumber\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputUserName\" class=\"col-sm-2 col-form-label\">UserName</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"email\" class=\"form-control\" id=\"inputUserName\" placeholder=\"Enter the username of Student\" name=\"username\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Password</label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Enter the password of Student\" name=\"password\" ngModel>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <button type=\"reset\" class=\"btn btn-primary\" style=\"float: right;\" (click)=\"goBack()\">Cancel</button>\r\n    </div>\r\n    <div class=\"col-11\">\r\n      <button type=\"submit\" class=\"btn btn-primary\" style=\"float: right;\" (click)=\"goBack()\">Confirm</button>\r\n    </div>\r\n  </form>\r\n</div>\r\n","<div>\r\n    <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n            <app-exam-table [enrollments]=\"enrollments\"></app-exam-table>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mt-2\">\r\n        <div class=\"col-lg-12\">\r\n            <app-exam-part-table *ngIf=\"selectedEnrollment.exam != undefined\" [examParts]=\"selectedEnrollment.exam.examParts\"></app-exam-part-table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport Enrollment from 'src/app/models/Enrollment';\r\nimport { Exam } from 'src/app/models/Exam';\r\nimport { EnrollmentServiceService } from 'src/app/services/enrollment-service.service';\r\nimport { EventServiceService } from 'src/app/services/event-service.service';\r\n\r\n@Component({\r\n  selector: 'app-exams',\r\n  templateUrl: './exams.component.html',\r\n  styleUrls: ['./exams.component.css']\r\n})\r\nexport class ExamsComponent implements OnInit {\r\n\r\n  enrollments:Enrollment[] = [];\r\n  exams:Exam[] = [];\r\n  selectedEnrollment: Enrollment = {\r\n    id: 0,\r\n    exam: {\r\n      id: 0,\r\n      examPoints: 0,\r\n      grade: 0,\r\n      examParts: [],\r\n      teaching: null\r\n    }\r\n  };\r\n\r\n  constructor(private enrollmentService: EnrollmentServiceService, private eventService: EventServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.enrollmentService.getLoggedInStudentEnrollments().subscribe( (enrollments) => {\r\n      this.enrollments = enrollments\r\n      this.exams = this.getExamsFromEnrollments(enrollments);\r\n    });\r\n    this.eventService.examDetailsListener().subscribe( (enrollment) => {\r\n      console.log(enrollment);\r\n      console.log(\"logged enrollments\")\r\n      this.selectedEnrollment = enrollment;\r\n    });\r\n  }\r\n\r\n  getExamsFromEnrollments(enrollments: Enrollment[]){\r\n    var exams:Exam[] = [];\r\n\r\n    enrollments.forEach(enrollment => {\r\n      exams.push(enrollment.exam);\r\n    });\r\n    console.log(exams);\r\n    return exams;\r\n  }\r\n\r\n  getEnrollmentById (id: number) {\r\n    this.enrollments.forEach(enrollment => {\r\n      if(enrollment.id == id){\r\n        return enrollment;\r\n      }\r\n    });\r\n    return null;\r\n  }\r\n\r\n}\r\n","<div class=\"bg-light p-4 rounded\">\r\n    <h2>Finance history</h2>\r\n    <table class=\"table\">\r\n      <thead class=\"bg-primary rounded\">\r\n        <tr>\r\n          <th scoper=\"col\" class=\"text-light\">#</th>\r\n          <th scope=\"col\" class=\"text-light\">Type</th>\r\n          <th scope=\"col\" class=\"text-light\">Amount</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let transaction of transactions; let i = index\">\r\n          <th scope=\"row\">{{ i + 1 }}</th>\r\n          <td>{{ transaction.transactionType.name }}</td>\r\n          <td>{{ transaction.amount }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n    <p *ngIf=\"transactions.length == 0\" class=\"text-center h3 bold\">No transactions to display</p>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport Transaction from \"../../models/Transaction\";\r\nimport { FinanceService } from '../../services/finance.service';\r\n\r\n@Component({\r\n  selector: 'app-finance-history',\r\n  templateUrl: './finance-history.component.html',\r\n  styleUrls: ['./finance-history.component.css']\r\n})\r\nexport class FinanceHistoryComponent implements OnInit {\r\n  transactions:Transaction[] = [];\r\n\r\n  constructor(private financeService: FinanceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.financeService.getAll().subscribe( (transactions) => (this.transactions = transactions))\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport Enrollment from '../models/Enrollment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventServiceService {\r\n\r\n  private examDetailsEvent = new BehaviorSubject<Enrollment>(new Enrollment);\r\n\r\n  emitExamDetailsEvent(enrollment: Enrollment){\r\n    this.examDetailsEvent.next(enrollment);\r\n  }\r\n\r\n  examDetailsListener(){\r\n    return this.examDetailsEvent.asObservable();\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Student } from '../models/Student';\r\nimport { AuthenticationServiceService } from '../services/authentication-service.service';\r\nimport { DocumentServiceService } from '../services/document-service.service';\r\nimport { StudentServiceService } from '../services/student-service.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  student: Student;\r\n\r\n  constructor(private studentService: StudentServiceService, private authentiactionService: AuthenticationServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log(JSON.parse(localStorage.getItem(\"currentUser\")));\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-lg-6\">\r\n        <app-student-info></app-student-info>\r\n    </div>\r\n    <div class=\"col-lg-6\">\r\n        <app-document-table></app-document-table>\r\n    </div>\r\n</div>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators'\r\nimport { JwtUtilsService } from './jwt-utils.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationServiceService {\r\n\r\n  private readonly loginPath = 'http://localhost:8080/api/login';\r\n\r\n  constructor(private http: HttpClient, private jwtUtilsService: JwtUtilsService) { }\r\n\r\n  login(username: string, password: string): Observable<boolean> {\r\n    var headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n    var loginInfo = {\r\n      username: username,\r\n      password: password\r\n    };\r\n\r\n    return this.http.post(this.loginPath, JSON.stringify(loginInfo), { headers: headers, responseType: \"text\" }).pipe(map((res: any) => {\r\n      //let token = res && res['token'];\r\n      let token = res;\r\n      if (token) {\r\n        localStorage.setItem('currentUser', JSON.stringify({\r\n          username: username,\r\n          roles: this.jwtUtilsService.getRoles(token),\r\n          token: token\r\n        }));\r\n        return true;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }),catchError((error: any) => {\r\n      if (error.status === 400) {\r\n        return Observable.throw('Ilegal login');\r\n      }\r\n      else {\r\n        return Observable.throw(error.json().error || 'Server error');\r\n      }\r\n    }\r\n    ))\r\n  }\r\n\r\n  getToken(): String {\r\n    var currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n    var token = currentUser && currentUser.token;\r\n    return token ? token : \"\";\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n  isLoggedIn(): boolean {\r\n    if (this.getToken() != '') return true;\r\n    else return false;\r\n  }\r\n\r\n  getCurrentUser() {\r\n    if (localStorage.currentUser) {\r\n      return JSON.parse(localStorage.currentUser);\r\n    }\r\n    else {\r\n      return undefined;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-finance',\r\n  templateUrl: './finance.component.html',\r\n  styleUrls: ['./finance.component.css']\r\n})\r\nexport class FinanceComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-finance-history></app-finance-history>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginFormComponent } from \"./login-form/login-form.component\";\r\nimport { RegisterFormComponent } from \"./register-form/register-form.component\";\r\nimport { ListGroupComponent } from './list-group/list-group.component';\r\nimport { DocumentTableComponent } from './document-table/document-table.component';\r\nimport { StudentInfoComponent } from './student-info/student-info.component';\r\nimport { ProfessorInfoComponent } from './professor-info/professor-info.component';\r\nimport { FinanceTableComponent } from './finance-table/finance-table.component';\r\nimport { ExamTableComponent } from './exam-table/exam-table.component';\r\nimport { StudentTableComponent } from './student-table/student-table.component';\r\nimport { GradeStudentTableComponent } from './grade-student-table/grade-student-table.component';\r\nimport { CourseTableComponent } from './course-table/course-table.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { UserInfoComponent } from './user-info/user-info.component';\r\nimport { FinanceComponent } from './components/finance/finance.component';\r\nimport { FinanceHistoryComponent } from './components/finance-history/finance-history.component';\r\nimport { FinanceInfoComponent } from './components/finance-info/finance-info.component';\r\nimport { AdminProfileComponent } from './admin-profile/admin-profile.component';\r\nimport { AdminStudentsComponent } from './admin-students/admin-students.component';\r\nimport { AdminProfessorComponent } from './components/admin-professor/admin-professor/admin-professor.component';\r\nimport { ProfessorProfileComponent } from './professor-profile/professor-profile.component';\r\nimport { ProfessorNavbarComponent } from './professor-navbar/professor-navbar.component';\r\nimport { ExamComponent } from './exam/exam.component';\r\nimport { AdminStudentDetailComponent } from './components/admin-student-detail/admin-student-detail.component';\r\n\r\n\r\nimport { DocumentTableRowComponent } from './components/document-table-row/document-table-row.component';\r\nimport { ExamsComponent } from './components/exams/exams.component';\r\nimport { ExamRowComponent } from './components/exam-row/exam-row.component';\r\nimport { ExamPartTableComponent } from './components/exam-part-table/exam-part-table.component';\r\nimport { ExamPartRowComponent } from './components/exam-part-row/exam-part-row.component';\r\nimport { ProfessorExamsComponent } from './professor-exams/professor-exams.component';\r\nimport { ProfessorCoursesComponent } from './components/professor-courses/professor-courses.component';\r\nimport { AdminCoursesComponent } from './components/admin-courses/admin-courses.component';\r\nimport { AdminCoursesDetailsComponent } from './components/admin-courses-details/admin-courses-details.component';\r\nimport { ProfessorStudentTableComponent } from './components/professor-student-table/professor-student-table.component';\r\n\r\n@NgModule({\r\n  declarations: [ \r\n    AppComponent, \r\n    LoginFormComponent,\r\n    RegisterFormComponent, \r\n    NavbarComponent, \r\n    ProfileComponent,\r\n    DocumentTableComponent,\r\n    UserInfoComponent,\r\n    StudentInfoComponent,\r\n    FinanceComponent,\r\n    FinanceHistoryComponent,\r\n    FinanceInfoComponent,\r\n    AdminProfileComponent,\r\n    AdminStudentsComponent,\r\n    AdminProfessorComponent,\r\n    ProfessorProfileComponent,\r\n    ProfessorNavbarComponent,\r\n    ExamComponent,\r\n    ProfessorInfoComponent,\r\n    DocumentTableRowComponent,\r\n    ExamsComponent,\r\n    ExamTableComponent,\r\n    ExamRowComponent,\r\n    ExamPartTableComponent,\r\n    ExamPartRowComponent,\r\n    ProfessorExamsComponent,\r\n    ProfessorCoursesComponent,\r\n    AdminStudentDetailComponent,\r\n    AdminCoursesComponent,\r\n    AdminCoursesDetailsComponent,\r\n    CourseTableComponent,\r\n    ProfessorStudentTableComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    RouterModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    CommonModule\r\n  ],\r\n  exports: [],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register-form',\r\n  templateUrl: './register-form.component.html',\r\n  styleUrls: ['./register-form.component.css']\r\n})\r\nexport class RegisterFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<form class=\"w-25 m-auto\">\r\n    <h2>Register</h2>\r\n    <div class=\"mb-3\">\r\n        <label for=\"inputEmail\" class=\"form-label\">Email address</label>\r\n        <input type=\"email\" class=\"form-control\" id=\"inputEmail\" aria-describedby=\"emailHelp\">\r\n    </div>\r\n    <div class=\"mb-3\">\r\n        <label for=\"inputPassword\" class=\"form-label\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"inputPassword\">\r\n    </div>  \r\n    <div class=\"mb-3\">\r\n        <label for=\"inputConfirmPassword\" class=\"form-label\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" id=\"inputConfirmPassword\">\r\n    </div>\r\n    <button type=\"submit\" class=\"btn btn-primary\" style=\"margin-right: 5px;\">Submit</button>\r\n    <button routerLink=\"/login\" type=\"submit\" class=\"btn btn-secondary ml-2\">I already have an account</button>\r\n  </form>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-grade-student-table',\r\n  templateUrl: './grade-student-table.component.html',\r\n  styleUrls: ['./grade-student-table.component.css']\r\n})\r\nexport class GradeStudentTableComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"w-25 m-auto\">\r\n    <h2>Edit student</h2>\r\n  \r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">First name</th>\r\n          <th scope=\"col\">Last name</th>\r\n          <th scope=\"col\">Exam part1</th>\r\n          <th scope=\"col\">Exam part2</th>\r\n          <th scope=\"col\">Points</th>\r\n          <th scope=\"col\">Grade</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>Milica</td>\r\n          <td>Pajic</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>100</td>\r\n          <td>10</td>\r\n      \r\n        </tr>\r\n        <tr>\r\n          <td>Aleksa</td>\r\n          <td>Petrovic</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>100</td>\r\n          <td>10</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Damir</td>\r\n          <td>Tizmonar</td>\r\n          <td>50</td>\r\n          <td>50</td>\r\n          <td>100</td>\r\n          <td>10</td>       \r\n        </tr>\r\n        <tr>\r\n            <td>Dusan</td>\r\n            <td>Mrantinkovic</td>\r\n            <td>50</td>\r\n            <td>50</td>\r\n            <td>100</td>\r\n            <td>10</td>         \r\n          </tr>\r\n      </tbody>\r\n      <td><button class=\"p-0 btn btn-success\" style=\"float: right;\">Cancel</button></td>\r\n      <td><button class=\"p-0 btn btn-success\" style=\"float: right;\">Add</button></td>\r\n\r\n    </table>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '[app-document-table-row]',\r\n  templateUrl: './document-table-row.component.html',\r\n  styleUrls: ['./document-table-row.component.css']\r\n})\r\nexport class DocumentTableRowComponent implements OnInit {\r\n\r\n  @Input() index;\r\n  @Input() document;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<th scope=\"row\">{{ index + 1 }}</th>\r\n<td>{{ document.title }}</td>\r\n<td>\r\n    <button class=\"p-0 btn btn-danger\" style=\"float: right; margin-left: 5px;\">Delete</button>\r\n    <button class=\"p-0 btn btn-success\" style=\"float: right;\">Download</button>\r\n</td>","<div >\r\n  <div class=\"bg-light p-4 rounded\">\r\n  <h2 class=\"text-black\">Teacher courses</h2>\r\n  <table class=\"table table-sm\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">Title</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let course of courses; let i = index\">\r\n        <td>{{i+1}}</td>\r\n        <td>{{course.title}}</td>\r\n        <td><button type=\"submit\" class=\"btn btn-primary\" style=\"float: right;\" (click)=\"seeStudents(course.id)\">See students</button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  </div>\r\n  <div class=\"bg-light p-4 rounded mt-1\">\r\n  <h2 class=\"text-black\">Teacher students</h2>\r\n  <table class=\"table table-sm\">\r\n    <thead>\r\n      <tr>\r\n        <th scope=\"col\">#</th>\r\n        <th scope=\"col\">First name</th>\r\n        <th scope=\"col\">Last name</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let student of students; let i = index\">\r\n        <td>{{i+1}}</td>\r\n        <td>{{student.firstName}}</td>\r\n        <td>{{student.lastName}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { CourseInstance } from '../models/CourseInstanse';\r\nimport { CourseSpecification } from '../models/CourseSpecification';\r\nimport { Student } from '../models/Student';\r\nimport { CourseServiceService } from '../services/course-service.service';\r\n\r\n@Component({\r\n  selector: 'app-course-table',\r\n  templateUrl: './course-table.component.html',\r\n  styleUrls: ['./course-table.component.css']\r\n})\r\nexport class CourseTableComponent implements OnInit {\r\n\r\n  constructor(private courseService : CourseServiceService) { }\r\n  courses:CourseSpecification[];\r\n  students: Student[]=[];\r\n  ngOnInit(): void {\r\n    this.courseService.getAllTeacherCourses().subscribe((courses)=>(this.courses=courses));\r\n    \r\n  }\r\n  seeStudents(id: number): void {\r\n    this.courseService.getAllTeacherStudents(id).subscribe(( students ) => {\r\n      this.students = students;\r\n    })\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Professor } from '../models/Professor';\r\nimport { AuthenticationServiceService } from '../services/authentication-service.service';\r\nimport { DocumentServiceService } from '../services/document-service.service';\r\nimport { ProfessorServiceService } from '../services/professor-service.service';\r\nimport { StudentServiceService } from '../services/student-service.service';\r\n\r\n@Component({\r\n  selector: 'app-professor-profile',\r\n  templateUrl: './professor-profile.component.html',\r\n  styleUrls: ['./professor-profile.component.css']\r\n})\r\nexport class ProfessorProfileComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-professor-info></app-professor-info>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationServiceService } from '../services/authentication-service.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthenticationServiceService) { }\r\n\r\n  onLogout(): void {\r\n    this.authService.logout();\r\n    window.location.reload();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<header class=\"site-navbar py-4 js-sticky-header site-navbar-target\" role=\"banner\">\r\n      \r\n  <div>\r\n    <div class=\"d-flex align-items-center\">\r\n      <div class=\"site-logo mr-auto w-25\"><a routerLink=\"/\">UniService</a></div>\r\n\r\n      <div class=\"mx-auto text-center\">\r\n        <nav class=\"site-navigation position-relative text-right\" role=\"navigation\">\r\n          <ul class=\"site-menu main-menu js-clone-nav mx-auto d-none d-lg-block  m-0 p-0\">\r\n            <li><a routerLink=\"/profile\" class=\"nav-link\"><strong>Profile</strong></a></li>\r\n            <li><a routerLink=\"/exams\" class=\"nav-link\"><strong>Exams</strong></a></li>\r\n            <li><a routerLink=\"/finances\" class=\"nav-link\"><strong>Finances</strong></a></li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n\r\n      <div class=\"ml-auto w-25\">\r\n        <nav class=\"site-navigation position-relative text-right\" role=\"navigation\">\r\n          <ul class=\"site-menu main-menu site-menu-dark js-clone-nav mr-auto d-none d-lg-block m-0 p-0\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" (click)=\"onLogout()\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                Logout\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <a href=\"#\" class=\"d-inline-block d-lg-none site-menu-toggle js-menu-toggle text-black float-right\"><span class=\"icon-menu h3\"></span></a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>","<div class=\"bg-light p-4 rounded\">\r\n    <h2>Exams</h2>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Options</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr app-exam-row [enrollment]=\"enrollment\" [index]=\"i\" *ngFor=\"let enrollment of enrollments; let i = index\"></tr>\r\n      </tbody>\r\n    </table>\r\n  </div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport Enrollment from '../models/Enrollment';\r\nimport {Exam} from '../models/Exam';\r\n\r\n\r\n@Component({\r\n  selector: 'app-exam-table',\r\n  templateUrl: './exam-table.component.html',\r\n  styleUrls: ['./exam-table.component.css']\r\n})\r\nexport class ExamTableComponent implements OnInit {\r\n\r\n  @Input() enrollments: Enrollment[];\r\n  @Input() onEnrollmentSelect: (id: number) => void;\r\n  constructor() { }\r\n  \r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { Student } from '../models/Student';\nimport { AuthenticationServiceService } from './authentication-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminStudentsService {\n\n  private readonly URL_STUDENTS = \"http://localhost:8080/students\";\n  private readonly URL_API_STUDENTS = \"http://localhost:8080/api/students\";\n\n  private refreshNeeded = new Subject<void>();\n\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) {}\n\n  getRefresNeeded() {\n    return this.refreshNeeded;\n  }\n\n  getAll(): Observable<Student[]> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    return this.http.get<Student[]>(this.URL_STUDENTS, requestOptions);\n  }\n\n  saveStudent(student: Student): Observable<Student> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    const data = JSON.stringify(student)\n    return this.http.post<Student>(this.URL_API_STUDENTS, data, requestOptions)\n      .pipe(\n          tap(() => {this.refreshNeeded.next();\n          })\n    );\n  }\n\n  getStudent(id: number): Observable<Student> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    const url = `${this.URL_STUDENTS}/${id}`;\n    return this.http.get<Student>(url, requestOptions);\n  }\n\n  deleteStudent(studentId: number): Observable<any> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    const url = `${this.URL_STUDENTS}/${studentId}`;\n    return this.http.delete<any>(url, requestOptions);\n  }\n\n  updateStudent(studentId: number, student: Student): Observable<Student> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    const url = `${this.URL_API_STUDENTS}/${studentId}`\n    return this.http.put<Student>(url, student, requestOptions);\n  }\n\n}\n","import { Course } from \"./Course\";\r\nimport { Exam } from \"./Exam\";\r\nimport { Student } from \"./Student\";\r\n\r\nexport default class Enrollment{\r\n    id: number;\r\n    exam: Exam;\r\n}","import { User } from \"./User\";\r\n\r\nexport class Student implements StudentInterface {\r\n    id?:number;\r\n    firstName:string;\r\n    lastName:string;\r\n    cardNumber:string;\r\n    balance:number;\r\n    accountNumber:number;\r\n    user: User;\r\n\r\nconstructor(studentCfg: StudentInterface)\r\n\t{\t\r\n\t\tthis.id = studentCfg.id;\r\n        this.firstName = studentCfg.firstName;\r\n        this.lastName = studentCfg.lastName;\r\n        this.cardNumber = studentCfg.cardNumber;\r\n        this.balance = studentCfg.balance;\r\n        this.accountNumber = studentCfg.accountNumber;\r\n        this.user = studentCfg.user;\t\t\r\n\t}\r\n}\r\n\r\ninterface StudentInterface{\r\n\tid?:number;\r\n    firstName:string;\r\n    lastName:string;\r\n    cardNumber:string;\r\n    balance:number;\r\n    accountNumber:number;\r\n    user: User;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\n\r\nimport Document from \"../models/Document\";\r\nimport FileResponse from '../models/FileResponse';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DocumentServiceService {\r\n\r\n  private readonly URL = \"http://localhost:8080/documents\";\r\n\r\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\r\n\r\n  getAll(): Observable<Document[]>{\r\n    return this.http.get<Document[]>(this.URL);\r\n  }\r\n\r\n  getLoggedInUserDocuments(): Observable<Document[]>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    return this.http.get<Document[]>(this.URL + \"/me\", {headers: headers});\r\n  }\r\n\r\n  uploadDocument(): Observable<Document> {\r\n    const headers = new HttpHeaders({\"X-Auth-Token\": this.authService.getToken().toString()});\r\n    var chooseFileInput = <HTMLInputElement>document.getElementById(\"chooseFileInput\");\r\n    const formData = new FormData();\r\n    formData.append(\"file\", chooseFileInput.files[0]);\r\n    return this.http.post<Document>(this.URL + \"/upload\", formData, {headers: headers});\r\n  }\r\n}\r\n","import { LEADING_TRIVIA_CHARS } from '@angular/compiler/src/render3/view/template';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport Enrollment from 'src/app/models/Enrollment';\r\nimport { EventServiceService } from 'src/app/services/event-service.service';\r\n\r\n@Component({\r\n  selector: '[app-exam-row]',\r\n  templateUrl: './exam-row.component.html',\r\n  styleUrls: ['./exam-row.component.css']\r\n})\r\nexport class ExamRowComponent implements OnInit {\r\n\r\n  @Input() enrollment;\r\n  @Input() index;\r\n\r\n  constructor(private eventService: EventServiceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onEnrollmentSelect(){\r\n    console.log(\"called\")\r\n    this.eventService.emitExamDetailsEvent(this.enrollment);\r\n  }\r\n\r\n}\r\n","<th scope=\"row\">{{ index + 1 }}</th>\r\n<td>{{ enrollment.courseSpecification.title}}</td>\r\n<td><button (click)=\"onEnrollmentSelect()\" class=\"btn btn-primary\">Details</button></td>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from \"../app.component\";\r\nimport { LoginFormComponent } from \"../login-form/login-form.component\";\r\nimport { RegisterFormComponent } from \"../register-form/register-form.component\";\r\nimport { ListGroupComponent } from '../list-group/list-group.component';\r\nimport { DocumentTableComponent } from '../document-table/document-table.component';\r\nimport { StudentInfoComponent } from '../student-info/student-info.component';\r\nimport { ProfessorInfoComponent } from '../professor-info/professor-info.component';\r\nimport { FinanceTableComponent } from '../finance-table/finance-table.component';\r\nimport { ExamTableComponent } from '../exam-table/exam-table.component';\r\nimport { StudentTableComponent } from '../student-table/student-table.component';\r\nimport { GradeStudentTableComponent } from '../grade-student-table/grade-student-table.component';\r\nimport { CourseTableComponent } from '../course-table/course-table.component';\r\nimport { NavbarComponent } from '../navbar/navbar.component';\r\nimport { ProfileComponent } from '../profile/profile.component';\r\nimport { AdminProfileComponent } from '../admin-profile/admin-profile.component';\r\nimport { AdminStudentsComponent } from '../admin-students/admin-students.component';\r\nimport { FinanceComponent } from '../components/finance/finance.component';\r\nimport { AdminProfessorComponent } from '../components/admin-professor/admin-professor/admin-professor.component';\r\nimport { ExamComponent } from '../exam/exam.component';\r\nimport { AdminStudentDetailComponent } from '../components/admin-student-detail/admin-student-detail.component';\r\nimport { ExamsComponent } from '../components/exams/exams.component';\r\nimport { ProfessorProfileComponent } from '../professor-profile/professor-profile.component';\r\nimport { ProfessorExamsComponent } from '../professor-exams/professor-exams.component';\r\nimport { AdminCoursesComponent } from '../components/admin-courses/admin-courses.component';\r\nimport { AdminCoursesDetailsComponent } from '../components/admin-courses-details/admin-courses-details.component';\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginFormComponent },\r\n  { path: 'register', component: RegisterFormComponent },\r\n  { path: 'listGroup', component: ListGroupComponent },\r\n  { path: 'documentTable', component: DocumentTableComponent },\r\n  { path: 'studentInfo', component: StudentInfoComponent },\r\n  { path: 'professorInfo', component: ProfessorInfoComponent },\r\n  { path: 'financeTable', component: FinanceTableComponent },\r\n  { path: 'examTable', component: ExamTableComponent },\r\n  { path: 'studentTable', component: StudentTableComponent },\r\n  { path: 'gradeTable', component: GradeStudentTableComponent },\r\n  { path: 'courseTable', component: CourseTableComponent },\r\n  { path: 'profile', component: ProfileComponent},\r\n  { path: 'adminProfile', component: AdminProfileComponent},\r\n  { path: 'adminStudents', component: AdminStudentsComponent},\r\n  { path: 'adminEditStudents/:id', component: AdminStudentDetailComponent},\r\n  { path: 'navBar', component: NavbarComponent},\r\n  { path: 'adminProfessors', component: AdminProfessorComponent},\r\n  { path: 'finances', component: FinanceComponent},\r\n  { path: 'exams', component: ExamsComponent},\r\n  { path: 'professorProfile', component: ProfessorProfileComponent},\r\n  { path: 'professorExams', component: ProfessorExamsComponent},\r\n  { path: 'AdminCourses', component: AdminCoursesComponent},\r\n  { path: 'AdminCoursesDetails/:id', component: AdminCoursesDetailsComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes),\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export  class User implements UserInterface {\r\n    id?:number;\r\n    userName:string;\r\n    password:string;\r\n    role:string;\r\n\r\n    constructor(userCfg?: UserInterface) {\r\n       if(userCfg){ this.id = userCfg.id;\r\n        this.userName = userCfg.userName;\r\n        this.password = userCfg.password;\r\n        this.role = userCfg.role;\r\n    }}\r\n\r\n}\r\n\r\ninterface UserInterface {\r\n    id?: number;\r\n    userName:string;\r\n    password:string;\r\n    role:string;\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Professor } from '../models/Professor';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminProfessorsService {\r\n\r\n  private readonly URL = \"http://localhost:8080/teachers\";\r\n\r\n  constructor(private http: HttpClient,private authService: AuthenticationServiceService) { }\r\n\r\n  getAll(): Observable<Professor[]> {\r\n    const headInfo = {\r\n      'Content-Type': 'application/json',\r\n      'X-Auth-Token': \"\" + this.authService.getToken()\r\n      \r\n    }\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headInfo)\r\n    };\r\n    return this.http.get<Professor[]>(this.URL,requestOptions);\r\n  }\r\n  addTeacher(profesor:Professor): Observable<Professor>{\r\n    const headInfo = {\r\n      'Content-Type': 'application/json',\r\n      'X-Auth-Token': \"\" + this.authService.getToken()\r\n      \r\n    }\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headInfo)\r\n    };\r\n    return this.http.post<Professor>(this.URL,profesor,requestOptions);\r\n  }\r\n  editTeacher(profesor:Professor):Observable<Professor>{\r\n    const headInfo = {\r\n      'Content-Type': 'application/json',\r\n      'X-Auth-Token': \"\" + this.authService.getToken()\r\n      \r\n    }\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headInfo)\r\n    };\r\n    return this.http.put<Professor>(this.URL,profesor,requestOptions)\r\n  }\r\n  deleteTeacher(profesor:Professor): Observable<any> {\r\n    const headInfo = {\r\n      'Content-Type': 'application/json',\r\n      'X-Auth-Token': \"\" + this.authService.getToken()\r\n      \r\n    }\r\n    const requestOptions = {\r\n      headers: new HttpHeaders(headInfo)\r\n    };\r\n    const url = `${this.URL}/${profesor.id}`;\r\n    return this.http.delete<any>(url, requestOptions);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from 'rxjs';\r\n\r\nimport Transaction from \"../models/Transaction\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FinanceService {\r\n  \r\n  private readonly URL = \"http://localhost:8080/transactions\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<Transaction[]>{    \r\n      return this.http.get<Transaction[]>(this.URL);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Professor } from '../models/Professor';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationServiceService } from './authentication-service.service';\r\nimport ExamPartsAndCourses from '../models/ExamPartsAndCourses';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfessorServiceService {\r\n\r\n  private readonly path = \"http://localhost:8080/teachers\";\r\n\r\n  constructor(private http: HttpClient, private authService : AuthenticationServiceService) { }\r\n\r\n  getTeachers(): Observable<Professor>{\r\n    return this.http.get<Professor>(this.path);\r\n  }\r\n  getloggedTeacher(): Observable<Professor>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n\r\n    return this.http.get<Professor>(this.path + \"/me\", {headers: headers});\r\n  }\r\n  getTeacherExamParts(professor:Professor): Observable<ExamPartsAndCourses[]>{\r\n    const headers = new HttpHeaders({\"Content-Type\": \"application/json\", \"X-Auth-Token\": this.authService.getToken().toString()});\r\n    const url = `${this.path}/${professor.id}/examPartsAndSpec`;\r\n    return this.http.get<ExamPartsAndCourses[]>(url, {headers: headers});\r\n  }\r\n}\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Course } from '../models/Course';\nimport { CourseInstance } from '../models/CourseInstanse';\nimport { Professor } from '../models/Professor';\nimport { AuthenticationServiceService } from './authentication-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminCoursesServiceService {\n\n  private readonly URL_COURSES = \"http://localhost:8080/courses\";\n\n  constructor(private http: HttpClient, private authService: AuthenticationServiceService) { }\n\n  getAll(): Observable<Course[]> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    return this.http.get<Course[]>(this.URL_COURSES, requestOptions);\n  }\n\n  getTeachersByCourse(courseId: number): Observable<Professor[]> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    const url = `${this.URL_COURSES}/${courseId}/teachers`\n    return this.http.get<Professor[]>(url, requestOptions);\n  }\n\n  getCourseInstancesByCourse(courseId: number): Observable<CourseInstance[]> {\n    const headInfo = {\n      'Content-Type': 'application/json',\n      'X-Auth-Token': \"\" + this.authService.getToken()\n    }\n    const requestOptions = {\n      headers: new HttpHeaders(headInfo)\n    };\n    const url = `${this.URL_COURSES}/${courseId}/courseInstances`\n    return this.http.get<CourseInstance[]>(url, requestOptions);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}